/*
Copyright 2023 Francisco Simões Braço-Forte

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: updates.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const updateAccountPassword = `-- name: UpdateAccountPassword :exec
UPDATE users_info.accounts
SET password = $1
WHERE aid = $2
`

type UpdateAccountPasswordParams struct {
	Password string
	Aid      uuid.UUID
}

func (q *Queries) UpdateAccountPassword(ctx context.Context, arg UpdateAccountPasswordParams) error {
	_, err := q.db.Exec(ctx, updateAccountPassword, arg.Password, arg.Aid)
	return err
}

const updateAccountUsername = `-- name: UpdateAccountUsername :exec

UPDATE users_info.accounts
SET username = $1
WHERE aid = $2
`

type UpdateAccountUsernameParams struct {
	Username string
	Aid      uuid.UUID
}

// Account related queries.
func (q *Queries) UpdateAccountUsername(ctx context.Context, arg UpdateAccountUsernameParams) error {
	_, err := q.db.Exec(ctx, updateAccountUsername, arg.Username, arg.Aid)
	return err
}

const updateProfileDescription = `-- name: UpdateProfileDescription :exec

UPDATE users_info.profiles
SET description = $1
WHERE aid = $2
`

type UpdateProfileDescriptionParams struct {
	Description sql.NullString
	Aid         uuid.NullUUID
}

// Profile related queries.
func (q *Queries) UpdateProfileDescription(ctx context.Context, arg UpdateProfileDescriptionParams) error {
	_, err := q.db.Exec(ctx, updateProfileDescription, arg.Description, arg.Aid)
	return err
}

const updateProfileFirstName = `-- name: UpdateProfileFirstName :exec
UPDATE users_info.profiles
SET first_name = $1
WHERE aid = $2
`

type UpdateProfileFirstNameParams struct {
	Firstname string
	Aid       uuid.NullUUID
}

func (q *Queries) UpdateProfileFirstName(ctx context.Context, arg UpdateProfileFirstNameParams) error {
	_, err := q.db.Exec(ctx, updateProfileFirstName, arg.Firstname, arg.Aid)
	return err
}

const updateProfileLocation = `-- name: UpdateProfileLocation :exec
UPDATE users_info.profiles
SET location = ST_Point($1, $2)::geography
WHERE aid = $3
`

type UpdateProfileLocationParams struct {
	Latitude  interface{}
	Longitude interface{}
	Aid       uuid.NullUUID
}

func (q *Queries) UpdateProfileLocation(ctx context.Context, arg UpdateProfileLocationParams) error {
	_, err := q.db.Exec(ctx, updateProfileLocation, arg.Latitude, arg.Longitude, arg.Aid)
	return err
}

const updateProfileMiddleName = `-- name: UpdateProfileMiddleName :exec
UPDATE users_info.profiles
SET middle_name = $1
WHERE aid = $2
`

type UpdateProfileMiddleNameParams struct {
	Middlename sql.NullString
	Aid        uuid.NullUUID
}

func (q *Queries) UpdateProfileMiddleName(ctx context.Context, arg UpdateProfileMiddleNameParams) error {
	_, err := q.db.Exec(ctx, updateProfileMiddleName, arg.Middlename, arg.Aid)
	return err
}

const updateProfileSurname = `-- name: UpdateProfileSurname :exec
UPDATE users_info.profiles
SET surname = $1
WHERE aid = $2
`

type UpdateProfileSurnameParams struct {
	Surname string
	Aid     uuid.NullUUID
}

func (q *Queries) UpdateProfileSurname(ctx context.Context, arg UpdateProfileSurnameParams) error {
	_, err := q.db.Exec(ctx, updateProfileSurname, arg.Surname, arg.Aid)
	return err
}
