/*
Copyright 2023 Francisco Simões Braço-Forte

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: inserts.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const insertNewAccount = `-- name: InsertNewAccount :one
INSERT INTO users_info.accounts (username, email, password, phone_prefix, phone_number)
VALUES ($1, $2, $3, $4, $5)
RETURNING aid
`

type InsertNewAccountParams struct {
	Username    string
	Email       string
	Password    string
	PhonePrefix sql.NullInt32
	PhoneNumber sql.NullInt32
}

func (q *Queries) InsertNewAccount(ctx context.Context, arg InsertNewAccountParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, insertNewAccount,
		arg.Username,
		arg.Email,
		arg.Password,
		arg.PhonePrefix,
		arg.PhoneNumber,
	)
	var aid uuid.UUID
	err := row.Scan(&aid)
	return aid, err
}

const insertNewProfile = `-- name: InsertNewProfile :exec
INSERT INTO users_info.profiles (aid, first_name, middle_name, surname)
VALUES ($1, $2, $3, $4)
`

type InsertNewProfileParams struct {
	Aid        uuid.NullUUID
	FirstName  string
	MiddleName sql.NullString
	Surname    string
}

func (q *Queries) InsertNewProfile(ctx context.Context, arg InsertNewProfileParams) error {
	_, err := q.db.Exec(ctx, insertNewProfile,
		arg.Aid,
		arg.FirstName,
		arg.MiddleName,
		arg.Surname,
	)
	return err
}
