// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: gets.sql

package db

import (
	"context"
	"database/sql"

	"github.com/twpayne/go-geom"
)

const getAccountInternals = `-- name: GetAccountInternals :one

SELECT aid, email
FROM users_info.accounts
WHERE username = $1
`

type GetAccountInternalsRow struct {
	Aid   int64
	Email string
}

// Accounts related queries.
func (q *Queries) GetAccountInternals(ctx context.Context, username string) (GetAccountInternalsRow, error) {
	row := q.db.QueryRow(ctx, getAccountInternals, username)
	var i GetAccountInternalsRow
	err := row.Scan(&i.Aid, &i.Email)
	return i, err
}

const getAccountInternalsAuth = `-- name: GetAccountInternalsAuth :one
SELECT aid, email
FROM users_info.accounts
WHERE username = $1 AND
      password = $2
`

type GetAccountInternalsAuthParams struct {
	Username string
	Password string
}

type GetAccountInternalsAuthRow struct {
	Aid   int64
	Email string
}

func (q *Queries) GetAccountInternalsAuth(ctx context.Context, arg GetAccountInternalsAuthParams) (GetAccountInternalsAuthRow, error) {
	row := q.db.QueryRow(ctx, getAccountInternalsAuth, arg.Username, arg.Password)
	var i GetAccountInternalsAuthRow
	err := row.Scan(&i.Aid, &i.Email)
	return i, err
}

const getAccountPhone = `-- name: GetAccountPhone :one
SELECT phone_prefix, phone_number
FROM users_info.accounts
WHERE aid = $1
`

type GetAccountPhoneRow struct {
	PhonePrefix sql.NullInt32
	PhoneNumber sql.NullInt32
}

func (q *Queries) GetAccountPhone(ctx context.Context, aid int64) (GetAccountPhoneRow, error) {
	row := q.db.QueryRow(ctx, getAccountPhone, aid)
	var i GetAccountPhoneRow
	err := row.Scan(&i.PhonePrefix, &i.PhoneNumber)
	return i, err
}

const getProfileFullName = `-- name: GetProfileFullName :one
SELECT first_name, middle_name, surname
FROM users_info.profiles
WHERE aid = $1
`

type GetProfileFullNameRow struct {
	FirstName  string
	MiddleName sql.NullString
	Surname    string
}

func (q *Queries) GetProfileFullName(ctx context.Context, aid sql.NullInt64) (GetProfileFullNameRow, error) {
	row := q.db.QueryRow(ctx, getProfileFullName, aid)
	var i GetProfileFullNameRow
	err := row.Scan(&i.FirstName, &i.MiddleName, &i.Surname)
	return i, err
}

const getProfileInfo = `-- name: GetProfileInfo :one
SELECT first_name, middle_name, surname, location, description
FROM users_info.profiles
WHERE aid = $1
`

type GetProfileInfoRow struct {
	FirstName   string
	MiddleName  sql.NullString
	Surname     string
	Location    geom.MultiPolygon
	Description sql.NullString
}

func (q *Queries) GetProfileInfo(ctx context.Context, aid sql.NullInt64) (GetProfileInfoRow, error) {
	row := q.db.QueryRow(ctx, getProfileInfo, aid)
	var i GetProfileInfoRow
	err := row.Scan(
		&i.FirstName,
		&i.MiddleName,
		&i.Surname,
		&i.Location,
		&i.Description,
	)
	return i, err
}

const getProfileLocation = `-- name: GetProfileLocation :one
SELECT location
FROM users_info.profiles
WHERE aid = $1
`

func (q *Queries) GetProfileLocation(ctx context.Context, aid sql.NullInt64) (geom.MultiPolygon, error) {
	row := q.db.QueryRow(ctx, getProfileLocation, aid)
	var location geom.MultiPolygon
	err := row.Scan(&location)
	return location, err
}

const getProfileSortName = `-- name: GetProfileSortName :one

SELECT first_name, surname
FROM users_info.profiles
WHERE aid = $1
`

type GetProfileSortNameRow struct {
	FirstName string
	Surname   string
}

// Profiles related queries.
func (q *Queries) GetProfileSortName(ctx context.Context, aid sql.NullInt64) (GetProfileSortNameRow, error) {
	row := q.db.QueryRow(ctx, getProfileSortName, aid)
	var i GetProfileSortNameRow
	err := row.Scan(&i.FirstName, &i.Surname)
	return i, err
}
